{"version":3,"sources":["components/resume.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Resume","profileData","useState","hideButtons","setHideButtons","isEditMode","setIsEditMode","useEffect","window","onafterprint","print","className","onClick","document","designMode","xmlns","viewBox","d","full_name","role","personal_details","email","mobile_number","href","linkedin","replace","github","professional_details","work_experience","map","item","workExperience","education","college","location","title","moment","start_date","format","end_date","honors","skills","Array","expertise","fill","awards","time_stamp","description","languages","join","WorkExperienceComponent","company","position","projects","project","ProjectsComponent","technologies_used","App","undefined","setProfileData","setIsMobile","a","check","navigator","userAgent","vendor","opera","test","substr","checkMobile","alert","metaTag","createElement","name","content","getElementsByTagName","appendChild","loadProfileData","fetch","then","response","json","data","console","log","exact","to","path","render","props","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.672108b8.chunk.js","sourcesContent":["import moment from \"moment\";\nimport React, { useState, useEffect } from 'react';\nimport { ProfileData, ProfessionalDetails, WorkExperience, Project } from '../interfaces/profile-data';\n\ninterface ResumeProps {\n    profileData: ProfileData | undefined;\n}\n\nexport const Resume: React.FC<ResumeProps> = ({ profileData }: ResumeProps) => {\n\n    const [hideButtons, setHideButtons] = useState(false);\n    const [isEditMode, setIsEditMode] = useState(false);\n\n    useEffect(() => {\n        var afterPrint = function () {\n            setHideButtons(false);\n            setIsEditMode(false);\n        };\n        window.onafterprint = afterPrint;\n    }, []);\n\n    useEffect(() => {\n        if (hideButtons) {\n            window.print()\n        }\n    }, [hideButtons])\n\n    return (\n        <div>\n            {hideButtons ? \"\" :\n                <div>\n                    {isEditMode ?\n                        <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"\n                            onClick={() => { document.designMode = \"off\"; setIsEditMode(false) }}>\n                            Stop Editing\n                        </button>\n                        :\n                        <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"\n                            onClick={() => { document.designMode = \"on\"; setIsEditMode(true) }}>\n                            Edit\n                        </button>}\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center\"\n                        onClick={() => {\n                            document.designMode = \"off\";\n                            setHideButtons(true)\n                        }}>\n                        <svg className=\"fill-current w-4 h-4 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M13 8V2H7v6H2l8 8 8-8h-5zM0 18h20v2H0v-2z\" /></svg>\n                        <span>Print</span>\n                    </button>\n                </div>\n            }\n\n            <div className=\"\">\n                <div className=\"relative px-12 py-12 bg-white shadow-lg sm:rounded-3xl sm:p-20 space-y-12\">\n                    <div className=\"grid grid-cols-5 grid-rows-1 gap-6\">\n                        <div className=\"col-span-3\">\n                            <p className=\"text-6xl font-serif font-bold\"><span>{profileData?.full_name}</span></p>\n                            <p className=\"text-base\"><span>{profileData?.role}</span></p>\n                        </div>\n                        <div className=\"col-span-2\">\n                            <p className=\"text-base font-bold leading-tight\"><span>{profileData?.personal_details.email}</span></p>\n                            <p className=\"text-base font-bold leading-tight\"><span>{profileData?.personal_details.mobile_number}</span></p>\n                            <p className=\"text-base font-bold leading-tight underline text-blue-600\"><span><a href={profileData?.linkedin}>{profileData?.linkedin.replace(\"https://\", \"\").replace(\"www.\", \"\")}</a></span></p>\n                            <p className=\"text-base font-bold leading-tight underline text-blue-600\"><span><a href={profileData?.github}>{profileData?.github.replace(\"https://\", \"\").replace(\"www.\", \"\")}</a></span></p>\n                        </div>\n                    </div>\n\n                    <div className=\"grid grid-cols-5 grid-rows-1 gap-6 space-y-4\">\n                        <div className=\"col-span-3 space-y-8\">\n                            <p className=\"text-lg font-bold text-blue-600\"><span>EXPERIENCE</span></p>\n                            {profileData?.professional_details.work_experience.map(item => {\n                                return <WorkExperienceComponent workExperience={item} />\n                            })}\n                            <div className=\"space-y-2\">\n                                <p className=\"text-lg font-bold text-blue-600\"><span>EDUCATION</span></p>\n                                {profileData?.professional_details.education.map(item => {\n                                    return (\n                                        <div>\n                                            <p className=\"text-lg\">\n                                                <span className=\"font-bold\">{item?.college}, </span>\n                                                <span>{item?.location}</span> — <span className=\"italic\">{item?.title}</span></p>\n                                            <p className=\"text-sm\"><span>{moment(item?.start_date).format('MMMM YYYY')} - {moment(item?.end_date).format('MMMM YYYY')}</span></p>\n                                            <p className=\"text-lg\"><span>Honors: {item?.honors}</span></p>\n                                        </div>\n                                    );\n                                })}\n\n                            </div>\n                        </div>\n                        <div className=\"col-span-2 space-y-8\">\n                            <p className=\"text-lg font-bold text-blue-600\"><span>SKILLS</span></p>\n                            <div className=\"space-y-2\">\n                                <table className=\"table-fixed\">\n                                    <tbody>\n                                        {profileData?.professional_details.skills.map(item => {\n                                            return (\n                                                <tr className=\"\">\n                                                    <td className=\"w-1/6\">\n                                                        <p className=\"text-lg\"><span>{item.title}  </span></p>\n                                                    </td>\n                                                    <td className=\"w-1/2\">\n                                                        <div className=\"inline-flex items-center\">\n                                                            {new Array(item.expertise).fill(0).map(item => {\n                                                                return (\n                                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                                                        <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                                                                    </svg>\n                                                                );\n                                                            })}\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            );\n                                        })}\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div className=\"space-y-2\">\n                                <p className=\"text-lg font-bold text-blue-600\"><span>AWARDS/CERTIFICATIONS</span></p>\n                                <div className=\"space-y-2\">\n                                    {profileData?.professional_details.awards.map(item => {\n                                        return (\n                                            <div className=\"\">\n                                                <p className=\"\"><span className=\"font-bold\">{item?.title}</span></p>\n                                                {item?.time_stamp ? <p className=\"text-sm\"><span>{moment(item?.time_stamp).format('MMMM YYYY')}</span></p> : \"\"}\n                                                <p className=\"text-sm\"><span>{item?.description}</span></p>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            </div>\n                            <div className=\"space-y-2\">\n                                <p className=\"text-lg font-bold text-blue-600\"><span>LANGUAGES</span></p>\n                                <p className=\"text-lg\"><span>{profileData?.personal_details.languages.join(', ')}</span></p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div >\n    );\n};\n\n\nconst WorkExperienceComponent = ({ workExperience }: { workExperience: WorkExperience }) => {\n    return (\n        <div className=\"space-y-4\">\n            <div>\n                <p className=\"text-lg\"><span className=\"font-bold\">{workExperience?.company},</span> <span>{workExperience?.location}</span> — <span className=\"italic\">{workExperience?.position}</span></p>\n                <p className=\"text-sm\"><span >{moment(workExperience?.start_date).format('MMMM YYYY')} - {workExperience?.end_date ? moment(workExperience?.end_date).format('MMMM YYYY') : \"PRESENT\"}</span></p>\n            </div>\n            <div className=\"space-y-2\">\n                {workExperience?.projects.map((item) => {\n                    return <ProjectsComponent project={item} />\n                })}\n            </div>\n        </div>\n    );\n}\n\n\nconst ProjectsComponent = ({ project }: { project: Project }) => {\n    return (\n        <div className=\"space-y-1\">\n            <p className=\"text-lg\"><span className=\"font-bold\">{project?.title}</span></p>\n            <p className=\"text-sm\"><span className=\"font-bold\">Technologies Used: </span><span>{project?.technologies_used.join(', ')}</span></p>\n            <ul className=\"list-disc list-inside space-y-1\">\n                {project?.description.map(item => {\n                    return (\n                        <li className=\"text-sm leading-snug\">\n                            {item}\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  withRouter,\n  Link, NavLink\n} from \"react-router-dom\";\n// import logo from './logo.svg';\nimport './App.css';\n// import Twitter from './components/twitter';\n// import Location from './components/location';\nimport { Resume } from './components/resume';\n// import Fade from 'react-reveal/Fade';\n// import TweenOne from 'rc-tween-one';\n// import Texty from 'rc-texty';\n// import { Element } from 'rc-scroll-anim';\n// import BannerAnim, { Element } from 'rc-banner-anim';\nimport ProfileData from './interfaces/profile-data';\n\ndeclare global {\n  interface Window {\n    opera: any;\n    mobileCheck: any;\n  }\n}\n\nfunction App() {\n\n  const [profileData, setProfileData] = useState<ProfileData | undefined>(undefined);\n  const [isMobile, setIsMobile] = useState(false);\n\n\n  function checkMobile() {\n    let check = false;\n    (function (a) { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window.opera);\n    return check;\n  };\n\n  useEffect(() => {\n    if (checkMobile()) {\n      setIsMobile(true);\n      alert(\"This site is currently available only in desktop mode\");\n      var metaTag = document.createElement('meta');\n      metaTag.name = \"viewport\"\n      metaTag.content = \"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\"\n      // metaTag.content = \"width=1024\"\n      document.getElementsByTagName('head')[0].appendChild(metaTag);\n    } else {\n      setIsMobile(false);\n    }\n    loadProfileData();\n  }, []);\n\n\n  const loadProfileData = async () => {\n    fetch(\"https://venukalam.github.io/portfolio/profile-data.json\")\n      .then(response => response.json())\n      .then((data: ProfileData) => {\n        setProfileData(data);\n        console.log(data);\n      });\n  };\n\n  return (\n    <div>\n      <Router>\n        < div className=\"App\" >\n          {/* <Navbar /> */}\n          < NavLink className=\"nav-link\" exact to=\"/resume\" >\n            Resume\n          </NavLink >\n          <NavLink className=\"nav-link\" exact to=\"/\">\n            Home\n          </NavLink>\n          <Switch>\n            {/* <Route exact path=\"/\" component={Resume} /> */}\n            <Route exact path=\"/resume\" render={(props) => <Resume profileData={profileData} />} />\n            {/* <Route exact path=\"/contact\" component={Contact} />\n        <Route exact path=\"/users/add\" component={AddUser} />\n        <Route exact path=\"/users/edit/:id\" component={EditUser} />\n        <Route exact path=\"/users/:id\" component={User} /> */}\n            {/* <Route component={function NotFound() {\n            return (<h1>Page not found</h1>)\n          }} /> */}\n          </Switch>\n          {/* <header className=\"bg-gray-800 md:sticky top-0 z-10\">\n        <div className=\"container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center\">\n          <a className=\"title-font font-medium text-white mb-4 md:mb-0\">\n            <a href=\"#about\" className=\"ml-3 text-xl\">\n              Reed Barger\n            </a>\n          </a>\n          <nav className=\"md:mr-auto md:ml-4 md:py-1 md:pl-4 md:border-l md:border-gray-700\tflex flex-wrap items-center text-base justify-center\">\n            <a href=\"#projects\" className=\"mr-5 hover:text-white\">\n              Past Work\n            </a>\n            <a href=\"#skills\" className=\"mr-5 hover:text-white\">\n              Skills\n            </a>\n            <a href=\"#testimonials\" className=\"mr-5 hover:text-white\">\n              Testimonials\n            </a>\n          </nav>\n          <a\n            href=\"#contact\"\n            className=\"inline-flex items-center bg-gray-800 border-0 py-1 px-3 focus:outline-none hover:bg-gray-700 rounded text-base mt-4 md:mt-0\">\n            Hire Me\n          </a>\n        </div>\n      </header>\n      <Fade right>\n        <h1>Teting CI/CD</h1>\n      </Fade>\n      <Texty>text</Texty>\n\n      <Element className=\"pack-page\">\n        <div>demo</div>\n      </Element>\n\n      <BannerAnim>\n        <Element key=\"demo1\">\n          <TweenOne animation={{ x: -30, type: 'from' }}>Ant Motion Demo</TweenOne>\n        </Element>\n        <Element key=\"demo2\">\n          <TweenOne animation={{ x: -30, type: 'from' }}>Ant Motion Demo</TweenOne>\n        </Element>\n      </BannerAnim> */}\n        </div >\n      </Router >\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}